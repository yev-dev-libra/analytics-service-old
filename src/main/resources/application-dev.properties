# ===============================
# = SERVER
# ===============================
spring.application.name=analytics-service
server.contextPath=/analytics-service/api/v1
server.port=9090
server.error.whitelabel.enabled=false

# ===============================
# = LOGGING
# ===============================
logging.level.root=WARN
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

logging.level.com.libra.apollo.analytics.api=DEBUG
logging.level.com.libra.apollo.analytics.service=DEBUG
logging.level.com.libra.apollo.analytics.repository=DEBUG


spring.profiles.active=dev

# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.url=jdbc:mariadb://192.168.100.36:3306/apollo?autoReconnect=true
spring.datasource.username=root
spring.datasource.password={L15R@!248}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.schema=classpath:sql/schema.sql
#spring.datasource.data=classpath:sql/init.sql

# ===============================
# = JPA / HIBERNATE
# ===============================
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=verify
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.default_schema=apollo


# Naming strategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=com.libra.apollo.analytics.entity.type.LibraMySQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Allows Hibernate to generate SQL optimized for a particular DBMS

# ===============================
# = APPLICATIONS LEVEL PROPERTY
# ===============================
analytics.async.core-pool-size=2
analytics.async.max-pool-size=50
analytics.async.queue-capacity=10000
analytics.async.batch-size=50


# ===============================
# = MISCELLANEOUS 
# ===============================
#spring.devtools.restart.enabled=true

# ===============================
# = EUREKA CLIENT 
# ===============================
#eureka.client.service-url.defaultZone=http://localhost:5050/eureka/
#eureka.instance.preferIpAddress= true
#eureka.instance.appname=analytics
#eureka.client.register-with-eureka=true
#eureka.client.fetchRegistry= true