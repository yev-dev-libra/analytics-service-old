package com.libra.apollo.analytics.entity;

import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;

import com.libra.apollo.analytics.engine.ValueDataFieldType;
import com.libra.apollo.analytics.entity.enums.CompositionType;
import com.libra.apollo.analytics.entity.enums.Operand;
import com.libra.apollo.analytics.specification.ValueParameter;

@SuppressWarnings("serial")
@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "type", discriminatorType = DiscriminatorType.STRING)
@Table(name = "parameter", schema = "analytics")
public abstract class Parameter extends AutoGeneratedId implements ValueParameter {

	@Column(name = "composition_type", nullable = true)
	@Enumerated(EnumType.STRING)
	private CompositionType compositionType;
	
	@Column(name = "data_field_type", nullable = true)
	@Enumerated(EnumType.STRING)
	private ValueDataFieldType fieldType;
	
	@Column(name = "operand", nullable = true)
	@Enumerated(EnumType.STRING)
	private Operand operand;

	public CompositionType getCompositionType() {
		return compositionType;
	}

	public void setCompositionType(CompositionType compositionType) {
		this.compositionType = compositionType;
	}

	public ValueDataFieldType getFieldType() {
		return fieldType;
	}

	public void setFieldType(ValueDataFieldType fieldType) {
		this.fieldType = fieldType;
	}

	public Operand getOperand() {
		return operand;
	}

	public void setOperand(Operand operand) {
		this.operand = operand;
	}

}
