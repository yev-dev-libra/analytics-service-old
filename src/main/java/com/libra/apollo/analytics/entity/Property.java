package com.libra.apollo.analytics.entity;

import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;

import com.libra.apollo.analytics.rules.Visitable;
import com.libra.apollo.analytics.rules.Visitor;

@SuppressWarnings("serial")
@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "type", discriminatorType = DiscriminatorType.STRING)
@Table(name = "property", schema = "analytics")
public abstract class Property extends AutoGeneratedId implements Visitable {

	@Column(name = "parameter", nullable = true)
	private Double parameter;

	protected Double getParameter() {
		return parameter;
	}

	protected void setParameter(Double parameter) {
		this.parameter = parameter;
	}
	
	public void accept(Visitor visitor) {
		visitor.visit(this);
	}

}
