package com.libra.apollo.analytics.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Immutable;

@Entity
//@Table(name = "stockindicators", schema="apollo")
@Table(name = "stockindicators")
@Immutable
public class StockIndicator extends AutoGeneratedId implements Comparable<StockIndicator> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 222263006260457523L;

	@Column(name = "instrument_id")
	private Long stockId;

	@Temporal(TemporalType.DATE)
	@Column(name = "stamp_date", nullable = false)
	private Date stampDate;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "target20d")
	private Double target20D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "target2m")
	private Double target2M;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value")
	private Double fairValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "discount_to_fair_value")
	private Double discountToFairValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "median_discount_to_fair_value")
	private Double medianDiscountToFairValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_upper")
	private Double fairValueUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_middle")
	private Double fairValueMiddle;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_lower")
	private Double fairValueLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "revisions")
	private Double revisions;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "revisions1m")
	private Double revisions1M;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "revisions3m")
	private Double revisions3M;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "risk")
	private Double risk;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "skew")
	private Double skew;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "star_rating")
	private Double starRating;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "flow_driver")
	private Double flowDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "price_driver")
	private Double priceDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "flow")
	private Double flow;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "flow_momentum")
	private Double flowMomentum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "sentiment")
	private Double sentiment;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "volume_avg_3m")
	private Double volumeAvg3M;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "high_price_52w")
	private Double highPrice52W;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "low_price_52w")
	private Double lowPrice52W;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "macd1")
	private Double macd1;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "macd2")
	private Double macd2;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "macd_signal")
	private Double macdSignal;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dmi_positive")
	private Double dmiPositive;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dmi_negative")
	private Double dmiNegative;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "cmci")
	private Double cmci;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "williams")
	private Double williams;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "rsi_14d")
	private Double rsi14D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "stochastics_percent_k")
	private Double stochasticsPercentK;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "stochastics_percent_d")
	private Double stochasticsPercentD;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "efficiency_ratio")
	private Double efficiencyRatio;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "efficiency_ratio_sma10d")
	private Double efficiencyRatioSMA10D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "oscillator")
	private Double oscillator;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "sma_20d")
	private Double sma20D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "sma_50d")
	private Double sma50D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "sma_200d")
	private Double sma200D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "bollinger_upper")
	private Double bollingerUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "bollinger_middle")
	private Double bollingerMiddle;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "bollinger_lower")
	private Double bollingerLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pct_change_ytd")
	private Double pctChangeYTD;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "macd_score")
	private Double macdScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dmi_score")
	private Double dmiScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "cmci_score")
	private Double cmciScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "williams_score")
	private Double williamsScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "rsi_score")
	private Double rsiScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "stochastic_score")
	private Double stochasticsScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "efficiency_score")
	private Double efficiencyScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "oscillator_score")
	private Double oscillatorScore;

	@Column(name = "fireline")
	private Integer fireline;

	@Column(name = "money_manager")
	private Integer moneyManager;

	@Column(name = "money_manager_advice", length = 255)
	private String moneyManagerAdvice; // Money Manager Advice take from old
										// LibraStockText object

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "adx")
	private Double adx;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "adr")
	private Double adr;

	@Column(name = "day_index")
	private Integer dayIndex;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dynamic_weighting", precision = 10, scale = 4)
	private Double dynamicWeighting;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dynamic_long_short", precision = 10, scale = 4)
	private Double dynamicLongShort;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "volume_score", precision = 10, scale = 4)
	private Double volumeScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "flow_score", precision = 10, scale = 4)
	private Double flowScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "flow_momentum_score", precision = 10, scale = 4)
	private Double flowMomentumScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "value_indicator_score", precision = 10, scale = 4)
	private Double valueIndicatorScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dfv_score", precision = 10, scale = 4)
	private Double dfvScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "flow_driver_score", precision = 10, scale = 4)
	private Double flowDriverScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_maximum")
	private Double peMaximum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_minimum")
	private Double peMinimum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_maximum")
	private Double pcFMaximum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_minimum")
	private Double pcFMinimum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_maximum")
	private Double pbMaximum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_minimum")
	private Double pbMinimum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_maximum")
	private Double psMaximum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_minimum")
	private Double psMinimum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_maximum")
	private Double pebitdaMaximum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_minimum")
	private Double pebitdaMinimum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "roe_maximum")
	private Double roeMaximum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "roe_minimum")
	private Double roeMinimum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "eps_fy1_pct_change_1d", precision = 10, scale = 4)
	private Double epsFY1PctChange1D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "eps_fy1_pct_change_5d", precision = 10, scale = 4)
	private Double epsFY1PctChange5D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "eps_fy1_pct_change_1m", precision = 10, scale = 4)
	private Double epsFY1PctChange1M;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "eps_fy1_pct_change_3m", precision = 10, scale = 4)
	private Double epsFY1PctChange3M;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "lower_margin_of_safety_level")
	private Double lowerMarginOfSafetyLevel;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "upper_margin_of_safety_level")
	private Double upperMarginOfSafetyLevel;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dynamic_short_weighting", precision = 10, scale = 4)
	private Double dynamicShortWeighting;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fib_023")
	private Double fib023;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fib_038")
	private Double fib038;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fib_050")
	private Double fib050;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fib_061")
	private Double fib061;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fib_076")
	private Double fib076;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "daily_alpha_8w")
	private Double dailyAlpha8W;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "daily_alpha_3w")
	private Double dailyAlpha3W;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "daily_alpha_1w")
	private Double dailyAlpha1W;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "daily_alpha_1d")
	private Double dailyAlpha1D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "intrinsic_value")
	private Double intrinsicValue;

	@Column(name = "intrinsic_value_pct")
	private Double intrinsicValuePct;

	@Column(name = "intrinsic_value_volatility")
	private Double intrinsicValueVolatility;

	@Column(name = "sweet_spot")
	private Boolean sweetSpot;

	@Column(name = "valuation_trading_flags", length = 8)
	private String valuationTradingFlags;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "target_20d_return")
	private Double target20DReturn;

	@Enumerated(EnumType.STRING)
	@Column(name = "ptps_trend")
	private TrendType ptpsTrend;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ptps_sar")
	private Double ptpsSAR;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ptps_af")
	private Double ptpsAF;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "base_value")
	private Double baseValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "stretch_value")
	private Double stretchValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "merger_value")
	private Double mergerValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "trigger_level")
	private Double triggerLevel;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "valuation_indicator")
	private Double valuationIndicator;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "valuation_indicator_10d")
	private Double valuationIndicator10D;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_pessimistic")
	private Double longTermPessimistic;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_neutral")
	private Double longTermNeutral;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_optimistic")
	private Double longTermOptimistic;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "estimates_fy1")
	private Double estimatesFy1;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "estimates_fy2")
	private Double estimatesFy2;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "eps_trend")
	private Double epsTrend;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_pb_forecast")
	private Double longTermPBForecast;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_pcf_forecast")
	private Double longTermPCFForecast;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_pebitda_forecast")
	private Double longTermPEBITDAForecast;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_pe_forecast")
	private Double longTermPEForecast;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_ps_forecast")
	private Double longTermPSForecast;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "long_term_value")
	private Double longTermValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_driver")
	private Double pbDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_lower")
	private Double pbLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_upper")
	private Double pbUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_value")
	private Double pbValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_second_order")
	private Double pbSecondOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_third_order")
	private Double pbThirdOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pb_tpm")
	private Double pbtpm;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_driver")
	private Double pcfDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_lower")
	private Double pcfLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_upper")
	private Double pcfUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_value")
	private Double pcfValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_second_order")
	private Double pcfSecondOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_third_order")
	private Double pcfThirdOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pcf_tpm")
	private Double pcftpm;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_driver")
	private Double pebitdaDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_lower")
	private Double pebitdaLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_upper")
	private Double pebitdaUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_value")
	private Double pebitdaValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_second_order")
	private Double pebitdaSecondOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_third_order")
	private Double pebitdaThirdOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pebitda_tpm")
	private Double pebitdatpm;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_driver")
	private Double peDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_lower")
	private Double peLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_upper")
	private Double peUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_value")
	private Double peValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_second_order")
	private Double peSecondOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_third_order")
	private Double peThirdOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pe_tpm")
	private Double petpm;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_driver")
	private Double psDriver;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_lower")
	private Double psLower;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_upper")
	private Double psUpper;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_value")
	private Double psValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_second_order")
	private Double psSecondOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_third_order")
	private Double psThirdOrder;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "ps_tpm")
	private Double pstpm;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dm_score_bookvalue")
	private Double dmScoreBookvalue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dm_score_earnings")
	private Double dmScoreEarnings;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dm_score_cashflow")
	private Double dmScoreCashflow;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dm_score_sales")
	private Double dmScoreSales;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "dm_score_ebitda")
	private Double dmScoreEbitda;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "intrinsic_value_slope")
	private Double intrinsicValueSlope;

	@Column(name = "intrinsic_value_slope_signal")
	private Boolean intrinsicValueSlopeSignal;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_slope")
	private Double fairValueSlope;

	@Column(name = "fair_value_range_flag")
	private Boolean fairValueRangeFlag;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "intrinsic_value_rsq")
	private Double intrinsicValueRsq;

	@Column(name = "cvi_fv_flag")
	private Boolean cviFvFlag;

	@Column(name = "cvi_iv_flag")
	private Boolean cviIvFlag;

	@Column(name = "cvi_buy_signal")
	private Boolean cviBuySignal;

	@Column(name = "cvi_close_signal")
	private Boolean cviCloseSignal;

	@Column(name = "cvi_short_signal")
	private Boolean cviShortSignal;

	@Column(name = "cvi_cover_signal")
	private Boolean cviCoverSignal;

	@Column(name = "cvi_buy_count")
	private Integer cviBuyCount;

	@Column(name = "cvi_close_count")
	private Integer cviCloseCount;

	@Column(name = "cvi_short_count")
	private Integer cviShortCount;

	@Column(name = "cvi_cover_count")
	private Integer cviCoverCount;

	@Column(name = "fractional_buy")
	private Boolean fractionalBuy;

	@Column(name = "fractional_sell")
	private Boolean fractionalSell;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "cvi_range_upside")
	private Double cviRangeUpside;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "cvi_range_downside")
	private Double cviRangeDownside;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "cvi")
	private Double cvi;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "apollo_alpha")
	private Double apolloAlpha;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "stock_index_beta")
	private Double stockIndexBeta;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "range_exp_20d_plus")
	private Double rangeExp20dPlus;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "range_exp_20d_minus")
	private Double rangeExp20dMinus;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "last_20d_performance")
	private Double last20dPerformance;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_projection")
	private Double fairValueProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "intrinsic_value_projection")
	private Double intrinsicValueProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "new_target")
	private Double newTarget;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "new_target_return")
	private Double newTargetReturn;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "conditional_direction_forecast")
	private Double conditionalDirectionForecast;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "move_to_fair_value_projection")
	private Double moveToFairValueProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "move_to_intrinsic_value_projection")
	private Double moveToIntrinsicValueProjection;

	@Column(name = "fair_value_range_limits")
	private Boolean fairValueRangeLimits;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_iv_projection")
	private Double greenIvProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_cvi")
	private Double greenCvi;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_fv_projection")
	private Double greenFvProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_forecast_return")
	private Double greenForecastReturn;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_alpha_beta")
	private Double greenAlphaBeta;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_iv_slope")
	private Double greenIvSlope;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_momentum")
	private Double greenMomentum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_extreme_filter")
	private Double greenExtremeFilter;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_range_limit")
	private Double greenRangeLimit;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_iv_pct_score")
	private Double greenIvPctScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "green_volatility_score")
	private Double greenVolatilityScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_iv_projection")
	private Double redIvProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_cvi")
	private Double redCvi;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_fv_projection")
	private Double redFvProjection;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_forecast_return")
	private Double redForecastReturn;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_alpha_beta")
	private Double redAlphaBeta;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_iv_slope")
	private Double redIvSlope;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_momentum")
	private Double redMomentum;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_extreme_filter")
	private Double redExtremeFilter;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_range_limit")
	private Double redRangeLimit;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_iv_pct_score")
	private Double redIvPctScore;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "red_volatility_score")
	private Double redVolatilityScore;

	//-------- New indicators for Analytics ------------//
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "price_change_1m")
	private Double priceChange1m;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "discount_premium_to_fair_value")
	private Double discountPremiumToFairValue;

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "net_discount_median_fair_value")
	private Double netDiscountMedianFairValue;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_change_1m")
	private Double fairValueChange1m;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "expected_return_2m")
	private Double expectedReturn2m;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "discount_premium_to_intrinsic_value")
	private Double discountPremiumToIntrinsicValue;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "intrinsic_value_change_3m")
	private Double intrinsicValueChange3m;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "fair_value_change_3m")
	private Double fairValueChange3m;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "intrinsic_value_change_1m")
	private Double intrinsicValueChange1m;
	
	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "pct_in_fair_value_range")
	private Double pctInFairValueRange;

	public Double getTarget20D() {
		return target20D;
	}

	public void setTarget20D(final Double target20d) {
		target20D = target20d;
	}

	public Double getTarget2M() {
		return target2M;
	}

	public void setTarget2M(final Double target2m) {
		target2M = target2m;
	}

	public Double getFairValue() {
		return fairValue;
	}

	public void setFairValue(final Double fairValue) {
		this.fairValue = fairValue;
	}

	public Double getDiscountToFairValue() {
		return discountToFairValue;
	}

	public void setDiscountToFairValue(final Double discountToFairValue) {
		this.discountToFairValue = discountToFairValue;
	}

	public Double getMedianDiscountToFairValue() {
		return medianDiscountToFairValue;
	}

	public void setMedianDiscountToFairValue(final Double medianDiscountToFairValue) {
		this.medianDiscountToFairValue = medianDiscountToFairValue;
	}

	public Double getFairValueUpper() {
		return fairValueUpper;
	}

	public void setFairValueUpper(final Double fairValueUpper) {
		this.fairValueUpper = fairValueUpper;
	}

	public Double getFairValueMiddle() {
		return fairValueMiddle;
	}

	public void setFairValueMiddle(final Double fairValueMiddle) {
		this.fairValueMiddle = fairValueMiddle;
	}

	public Double getFairValueLower() {
		return fairValueLower;
	}

	public void setFairValueLower(final Double fairValueLower) {
		this.fairValueLower = fairValueLower;
	}

	public Double getRevisions() {
		return revisions;
	}

	public void setRevisions(final Double latestRevision) {
		this.revisions = latestRevision;
	}

	public Double getRevisions1M() {
		return revisions1M;
	}

	public void setRevisions1M(final Double revisions1m) {
		revisions1M = revisions1m;
	}

	public Double getRevisions3M() {
		return revisions3M;
	}

	public void setRevisions3M(final Double revisions3m) {
		revisions3M = revisions3m;
	}

	public Double getRisk() {
		return risk;
	}

	public void setRisk(final Double risk) {
		this.risk = risk;
	}

	//@Type(type = IndicatorDouble.HIBERNATE_TYPE_NAME)
	@Column(name = "skew")
	public Double getSkew() {
		return skew;
	}

	public void setSkew(final Double skew) {
		this.skew = skew;
	}

	public Double getStarRating() {
		return starRating;
	}

	public void setStarRating(final Double starRating) {
		this.starRating = starRating;
	}

	public Double getFlowDriver() {
		return flowDriver;
	}

	public void setFlowDriver(final Double flowDriver) {
		this.flowDriver = flowDriver;
	}

	public Double getPriceDriver() {
		return priceDriver;
	}

	public void setPriceDriver(final Double priceDriver) {
		this.priceDriver = priceDriver;
	}

	public Double getFlow() {
		return flow;
	}

	public void setFlow(final Double flow) {
		this.flow = flow;
	}

	public Double getFlowMomentum() {
		return flowMomentum;
	}

	public void setFlowMomentum(final Double flowMomentum) {
		this.flowMomentum = flowMomentum;
	}

	public Double getSentiment() {
		return sentiment;
	}

	public void setSentiment(final Double sentiment) {
		this.sentiment = sentiment;
	}

	public Double getVolumeAvg3M() {
		return volumeAvg3M;
	}

	public void setVolumeAvg3M(final Double volumeAvg3M) {
		this.volumeAvg3M = volumeAvg3M;
	}

	public Double getHighPrice52W() {
		return highPrice52W;
	}

	public void setHighPrice52W(final Double highPrice52W) {
		this.highPrice52W = highPrice52W;
	}

	public Double getLowPrice52W() {
		return lowPrice52W;
	}

	public void setLowPrice52W(final Double lowPrice52W) {
		this.lowPrice52W = lowPrice52W;
	}

	public Double getMacd1() {
		return macd1;
	}

	public void setMacd1(final Double macd1) {
		this.macd1 = macd1;
	}

	public Double getMacd2() {
		return macd2;
	}

	public void setMacd2(final Double macd2) {
		this.macd2 = macd2;
	}

	public Double getMacdSignal() {
		return macdSignal;
	}

	public void setMacdSignal(final Double macdSignal) {
		this.macdSignal = macdSignal;
	}

	public Double getDmiPositive() {
		return dmiPositive;
	}

	public void setDmiPositive(final Double dmiPositive) {
		this.dmiPositive = dmiPositive;
	}

	public Double getDmiNegative() {
		return dmiNegative;
	}

	public void setDmiNegative(final Double dmiNegative) {
		this.dmiNegative = dmiNegative;
	}

	public Double getCmci() {
		return cmci;
	}

	public void setCmci(final Double cmci) {
		this.cmci = cmci;
	}

	public Double getWilliams() {
		return williams;
	}

	public void setWilliams(final Double williams) {
		this.williams = williams;
	}

	public Double getRsi14D() {
		return rsi14D;
	}

	public void setRsi14D(final Double rsi14d) {
		rsi14D = rsi14d;
	}

	public Double getStochasticsPercentK() {
		return stochasticsPercentK;
	}

	public void setStochasticsPercentK(final Double stochasticsPercentK) {
		this.stochasticsPercentK = stochasticsPercentK;
	}

	public Double getStochasticsPercentD() {
		return stochasticsPercentD;
	}

	public void setStochasticsPercentD(final Double stochasticsPercentD) {
		this.stochasticsPercentD = stochasticsPercentD;
	}

	public Double getEfficiencyRatio() {
		return efficiencyRatio;
	}

	public void setEfficiencyRatio(final Double efficiencyRatio) {
		this.efficiencyRatio = efficiencyRatio;
	}

	public Double getEfficiencyRatioSMA10D() {
		return efficiencyRatioSMA10D;
	}

	public void setEfficiencyRatioSMA10D(final Double efficiencyRatioSMA10D) {
		this.efficiencyRatioSMA10D = efficiencyRatioSMA10D;
	}

	public Double getOscillator() {
		return oscillator;
	}

	public void setOscillator(final Double oscillator) {
		this.oscillator = oscillator;
	}

	public Double getSma20D() {
		return sma20D;
	}

	public void setSma20D(final Double sma20d) {
		sma20D = sma20d;
	}

	public Double getSma50D() {
		return sma50D;
	}

	public void setSma50D(final Double sma50d) {
		sma50D = sma50d;
	}

	public Double getSma200D() {
		return sma200D;
	}

	public void setSma200D(final Double sma200d) {
		sma200D = sma200d;
	}

	public Double getBollingerUpper() {
		return bollingerUpper;
	}

	public void setBollingerUpper(final Double bollingerUpper) {
		this.bollingerUpper = bollingerUpper;
	}

	public Double getBollingerMiddle() {
		return bollingerMiddle;
	}

	public void setBollingerMiddle(final Double bollingerMiddle) {
		this.bollingerMiddle = bollingerMiddle;
	}

	public Double getBollingerLower() {
		return bollingerLower;
	}

	public void setBollingerLower(final Double bollingerLower) {
		this.bollingerLower = bollingerLower;
	}

	public Double getPctChangeYTD() {
		return pctChangeYTD;
	}

	public void setPctChangeYTD(final Double pctChangeYTD) {
		this.pctChangeYTD = pctChangeYTD;
	}

	public Double getMacdScore() {
		return macdScore;
	}

	public void setMacdScore(final Double macdScore) {
		this.macdScore = macdScore;
	}

	public Double getDmiScore() {
		return dmiScore;
	}

	public void setDmiScore(final Double dmiScore) {
		this.dmiScore = dmiScore;
	}

	public Double getCmciScore() {
		return cmciScore;
	}

	public void setCmciScore(final Double cmciScore) {
		this.cmciScore = cmciScore;
	}

	public Double getWilliamsScore() {
		return williamsScore;
	}

	public void setWilliamsScore(final Double williamsScore) {
		this.williamsScore = williamsScore;
	}

	public Double getRsiScore() {
		return rsiScore;
	}

	public void setRsiScore(final Double rsiScore) {
		this.rsiScore = rsiScore;
	}

	public Double getStochasticsScore() {
		return stochasticsScore;
	}

	public void setStochasticsScore(final Double stochasticsScore) {
		this.stochasticsScore = stochasticsScore;
	}

	public Double getEfficiencyScore() {
		return efficiencyScore;
	}

	public void setEfficiencyScore(final Double efficiencyScore) {
		this.efficiencyScore = efficiencyScore;
	}

	public Double getOscillatorScore() {
		return oscillatorScore;
	}

	public void setOscillatorScore(final Double oscillatorScore) {
		this.oscillatorScore = oscillatorScore;
	}

	public Integer getFireline() {
		return fireline;
	}

	public void setFireline(final Integer fireline) {
		this.fireline = fireline;
	}

	public Integer getMoneyManager() {
		return moneyManager;
	}

	public void setMoneyManager(final Integer moneyManager) {
		this.moneyManager = moneyManager;
	}

	public String getMoneyManagerAdvice() {
		return moneyManagerAdvice;
	}

	public void setMoneyManagerAdvice(final String moneyManagerAdvice) {
		this.moneyManagerAdvice = moneyManagerAdvice;
	}

	public Double getAdx() {
		return adx;
	}

	public void setAdx(final Double adx) {
		this.adx = adx;
	}

	public Double getAdr() {
		return adr;
	}

	public void setAdr(final Double adr) {
		this.adr = adr;
	}

	public Integer getDayIndex() {
		return dayIndex;
	}

	public void setDayIndex(final Integer dayIndex) {
		this.dayIndex = dayIndex;
	}

	public Double getDynamicWeighting() {
		return dynamicWeighting;
	}

	public void setDynamicWeighting(final Double dynamicWeighting) {
		this.dynamicWeighting = dynamicWeighting;
	}

	public Double getDynamicLongShort() {
		return dynamicLongShort;
	}

	public void setDynamicLongShort(final Double dynamicLongShort) {
		this.dynamicLongShort = dynamicLongShort;
	}

	public Double getVolumeScore() {
		return volumeScore;
	}

	public void setVolumeScore(final Double volumeScore) {
		this.volumeScore = volumeScore;
	}

	public Double getFlowScore() {
		return flowScore;
	}

	public void setFlowScore(final Double flowScore) {
		this.flowScore = flowScore;
	}

	public Double getFlowMomentumScore() {
		return flowMomentumScore;
	}

	public void setFlowMomentumScore(final Double flowMomentumScore) {
		this.flowMomentumScore = flowMomentumScore;
	}

	public Double getValueIndicatorScore() {
		return valueIndicatorScore;
	}

	public void setValueIndicatorScore(final Double valueIndicatorScore) {
		this.valueIndicatorScore = valueIndicatorScore;
	}

	public Double getDfvScore() {
		return dfvScore;
	}

	public void setDfvScore(final Double dfvScore) {
		this.dfvScore = dfvScore;
	}

	public Double getFlowDriverScore() {
		return flowDriverScore;
	}

	public void setFlowDriverScore(final Double flowDriverScore) {
		this.flowDriverScore = flowDriverScore;
	}

	public Double getPeMaximum() {
		return peMaximum;
	}

	public void setPeMaximum(final Double peMaximum) {
		this.peMaximum = peMaximum;
	}

	public Double getPeMinimum() {
		return peMinimum;
	}

	public void setPeMinimum(final Double peMinimum) {
		this.peMinimum = peMinimum;
	}

	public Double getPcFMaximum() {
		return pcFMaximum;
	}

	public void setPcFMaximum(final Double pcFMaximum) {
		this.pcFMaximum = pcFMaximum;
	}

	public Double getPcFMinimum() {
		return pcFMinimum;
	}

	public void setPcFMinimum(final Double pcFMinimum) {
		this.pcFMinimum = pcFMinimum;
	}

	public Double getPbMaximum() {
		return pbMaximum;
	}

	public void setPbMaximum(final Double pbMaximum) {
		this.pbMaximum = pbMaximum;
	}

	public Double getPbMinimum() {
		return pbMinimum;
	}

	public void setPbMinimum(final Double pbMinimum) {
		this.pbMinimum = pbMinimum;
	}

	public Double getPsMaximum() {
		return psMaximum;
	}

	public void setPsMaximum(final Double psMaximum) {
		this.psMaximum = psMaximum;
	}

	public Double getPsMinimum() {
		return psMinimum;
	}

	public void setPsMinimum(final Double psMinimum) {
		this.psMinimum = psMinimum;
	}

	public Double getPebitdaMaximum() {
		return pebitdaMaximum;
	}

	public void setPebitdaMaximum(final Double pebitdaMaximum) {
		this.pebitdaMaximum = pebitdaMaximum;
	}

	public Double getPebitdaMinimum() {
		return pebitdaMinimum;
	}

	public void setPebitdaMinimum(final Double pebitdaMinimum) {
		this.pebitdaMinimum = pebitdaMinimum;
	}

	public Double getRoeMaximum() {
		return roeMaximum;
	}

	public void setRoeMaximum(final Double roeMaximum) {
		this.roeMaximum = roeMaximum;
	}

	public Double getRoeMinimum() {
		return roeMinimum;
	}

	public void setRoeMinimum(final Double roeMinimum) {
		this.roeMinimum = roeMinimum;
	}

	public Double getEpsFY1PctChange1D() {
		return epsFY1PctChange1D;
	}

	public void setEpsFY1PctChange1D(final Double epsFY1PctChange1D) {
		this.epsFY1PctChange1D = epsFY1PctChange1D;
	}

	public Double getEpsFY1PctChange5D() {
		return epsFY1PctChange5D;
	}

	public void setEpsFY1PctChange5D(final Double epsFY1PctChange5D) {
		this.epsFY1PctChange5D = epsFY1PctChange5D;
	}

	public Double getEpsFY1PctChange1M() {
		return epsFY1PctChange1M;
	}

	public void setEpsFY1PctChange1M(final Double epsFY1PctChange1M) {
		this.epsFY1PctChange1M = epsFY1PctChange1M;
	}

	public Double getEpsFY1PctChange3M() {
		return epsFY1PctChange3M;
	}

	public void setEpsFY1PctChange3M(final Double epsFY1PctChange3M) {
		this.epsFY1PctChange3M = epsFY1PctChange3M;
	}

	public Double getLowerMarginOfSafetyLevel() {
		return lowerMarginOfSafetyLevel;
	}

	public void setLowerMarginOfSafetyLevel(final Double lowerMarginOfSafetyLevel) {
		this.lowerMarginOfSafetyLevel = lowerMarginOfSafetyLevel;
	}

	public Double getUpperMarginOfSafetyLevel() {
		return upperMarginOfSafetyLevel;
	}

	public void setUpperMarginOfSafetyLevel(final Double upperMarginOfSafetyLevel) {
		this.upperMarginOfSafetyLevel = upperMarginOfSafetyLevel;
	}

	public Double getDynamicShortWeighting() {
		return dynamicShortWeighting;
	}

	public void setDynamicShortWeighting(final Double dynamicShortWeighting) {
		this.dynamicShortWeighting = dynamicShortWeighting;
	}

	public Double getFib023() {
		return fib023;
	}

	public void setFib023(final Double fib023) {
		this.fib023 = fib023;
	}

	public Double getFib038() {
		return fib038;
	}

	public void setFib038(final Double fib038) {
		this.fib038 = fib038;
	}

	public Double getFib050() {
		return fib050;
	}

	public void setFib050(final Double fib050) {
		this.fib050 = fib050;
	}

	public Double getFib061() {
		return fib061;
	}

	public void setFib061(final Double fib061) {
		this.fib061 = fib061;
	}

	public Double getFib076() {
		return fib076;
	}

	public void setFib076(final Double fib076) {
		this.fib076 = fib076;
	}

	public Double getDailyAlpha8W() {
		return dailyAlpha8W;
	}

	public void setDailyAlpha8W(final Double dailyAlpha8W) {
		this.dailyAlpha8W = dailyAlpha8W;
	}

	public Double getDailyAlpha3W() {
		return dailyAlpha3W;
	}

	public void setDailyAlpha3W(final Double dailyAlpha3W) {
		this.dailyAlpha3W = dailyAlpha3W;
	}

	public Double getDailyAlpha1W() {
		return dailyAlpha1W;
	}

	public void setDailyAlpha1W(final Double dailyAlpha1W) {
		this.dailyAlpha1W = dailyAlpha1W;
	}

	public Double getDailyAlpha1D() {
		return dailyAlpha1D;
	}

	public void setDailyAlpha1D(final Double dailyAlpha1D) {
		this.dailyAlpha1D = dailyAlpha1D;
	}

	public Double getIntrinsicValue() {
		return intrinsicValue;
	}

	public void setIntrinsicValue(final Double intrinsicValue) {
		this.intrinsicValue = intrinsicValue;
	}

	public Double getIntrinsicValuePct() {
		return intrinsicValuePct;
	}

	public void setIntrinsicValuePct(final Double intrinsicValuePct) {
		this.intrinsicValuePct = intrinsicValuePct;
	}

	public Double getIntrinsicValueVolatility() {
		return intrinsicValueVolatility;
	}

	public void setIntrinsicValueVolatility(final Double intrinsicValueVolatility) {
		this.intrinsicValueVolatility = intrinsicValueVolatility;
	}

	public Boolean getSweetSpot() {
		return sweetSpot;
	}

	public void setSweetSpot(final Boolean sweetSpot) {
		this.sweetSpot = sweetSpot;
	}

	public String getValuationTradingFlags() {
		return valuationTradingFlags;
	}

	public void setValuationTradingFlags(final String valuationTradingFlags) {
		this.valuationTradingFlags = valuationTradingFlags;
	}

	public Double getTarget20DReturn() {
		return target20DReturn;
	}

	public void setTarget20DReturn(final Double target20dReturn) {
		target20DReturn = target20dReturn;
	}

	public TrendType getPtpsTrend() {
		return ptpsTrend;
	}

	/**
	 * @param ptpsTrend
	 *            the ptpsTrend to set
	 */
	public void setPtpsTrend(final TrendType ptpsTrend) {
		this.ptpsTrend = ptpsTrend;
	}

	/**
	 * @return the ptpsSAR
	 */

	public Double getPtpsSAR() {
		return ptpsSAR;
	}

	/**
	 * @param ptpsSAR
	 *            the ptpsSAR to set
	 */
	public void setPtpsSAR(final Double ptpsSAR) {
		this.ptpsSAR = ptpsSAR;
	}

	/**
	 * @return the ptpsAF
	 */

	public Double getPtpsAF() {
		return ptpsAF;
	}

	/**
	 * @param ptpsAF
	 *            the ptpsAF to set
	 */
	public void setPtpsAF(final Double ptpsAF) {
		this.ptpsAF = ptpsAF;
	}

	/**
	 * @return the baseValue
	 */
	public Double getBaseValue() {
		return baseValue;
	}

	/**
	 * @param baseValue
	 *            the baseValue to set
	 */
	public void setBaseValue(final Double baseValue) {
		this.baseValue = baseValue;
	}

	/**
	 * @return the stretchValue
	 */

	public Double getStretchValue() {
		return stretchValue;
	}

	/**
	 * @param stretchValue
	 *            the stretchValue to set
	 */
	public void setStretchValue(final Double stretchValue) {
		this.stretchValue = stretchValue;
	}

	/**
	 * @return the longTermPessimistic
	 */
	public Double getLongTermPessimistic() {
		return longTermPessimistic;
	}

	/**
	 * @param longTermPessimistic
	 *            the longTermPessimistic to set
	 */
	public void setLongTermPessimistic(final Double longTermPessimistic) {
		this.longTermPessimistic = longTermPessimistic;
	}

	/**
	 * @return the longTermNeutral
	 */

	public Double getLongTermNeutral() {
		return longTermNeutral;
	}

	/**
	 * @param longTermNeutral
	 *            the longTermNeutral to set
	 */
	public void setLongTermNeutral(final Double longTermNeutral) {
		this.longTermNeutral = longTermNeutral;
	}

	/**
	 * @return the longTermOptimistic
	 */
	public Double getLongTermOptimistic() {
		return longTermOptimistic;
	}

	/**
	 * @param longTermOptimistic
	 *            the longTermOptimistic to set
	 */
	public void setLongTermOptimistic(final Double longTermOptimistic) {
		this.longTermOptimistic = longTermOptimistic;
	}

	/**
	 * @return the longTermValue
	 */
	public Double getLongTermValue() {
		return longTermValue;
	}

	/**
	 * @param longTermTarget
	 *            the longTermTarget to set
	 */
	public void setLongTermValue(final Double longTermValue) {
		this.longTermValue = longTermValue;
	}

	public Double getEpsTrend() {
		return epsTrend;
	}

	public void setEpsTrend(final Double epsTrend) {
		this.epsTrend = epsTrend;
	}

	public Double getLongTermPBForecast() {
		return longTermPBForecast;
	}

	public void setLongTermPBForecast(final Double longTermPBForecast) {
		this.longTermPBForecast = longTermPBForecast;
	}

	public Double getLongTermPCFForecast() {
		return longTermPCFForecast;
	}

	public void setLongTermPCFForecast(final Double longTermPCFForecast) {
		this.longTermPCFForecast = longTermPCFForecast;
	}

	public Double getLongTermPEBITDAForecast() {
		return longTermPEBITDAForecast;
	}

	public void setLongTermPEBITDAForecast(final Double longTermPEBITDAForecast) {
		this.longTermPEBITDAForecast = longTermPEBITDAForecast;
	}

	public Double getLongTermPEForecast() {
		return longTermPEForecast;
	}

	public void setLongTermPEForecast(final Double longTermPEForecast) {
		this.longTermPEForecast = longTermPEForecast;
	}

	public Double getLongTermPSForecast() {
		return longTermPSForecast;
	}

	public void setLongTermPSForecast(final Double longTermPSForecast) {
		this.longTermPSForecast = longTermPSForecast;
	}

	public Double getMergerValue() {
		return mergerValue;
	}

	public void setMergerValue(final Double mergerValue) {
		this.mergerValue = mergerValue;
	}

	public Double getPbDriver() {
		return pbDriver;
	}

	public void setPbDriver(final Double pbDriver) {
		this.pbDriver = pbDriver;
	}

	public Double getPbLower() {
		return pbLower;
	}

	public void setPbLower(final Double pbLower) {
		this.pbLower = pbLower;
	}

	public Double getPbUpper() {
		return pbUpper;
	}

	public void setPbUpper(final Double pbUpper) {
		this.pbUpper = pbUpper;
	}

	public Double getPbValue() {
		return pbValue;
	}

	public void setPbValue(final Double pbValue) {
		this.pbValue = pbValue;
	}

	public Double getPbSecondOrder() {
		return pbSecondOrder;
	}

	public void setPbSecondOrder(final Double pbSecondOrder) {
		this.pbSecondOrder = pbSecondOrder;
	}

	public Double getPbThirdOrder() {
		return pbThirdOrder;
	}

	public void setPbThirdOrder(final Double pbThirdOrder) {
		this.pbThirdOrder = pbThirdOrder;
	}

	public Double getPbtpm() {
		return pbtpm;
	}

	public void setPbtpm(final Double pbtpm) {
		this.pbtpm = pbtpm;
	}

	public Double getPcfDriver() {
		return pcfDriver;
	}

	public void setPcfDriver(final Double pcfDriver) {
		this.pcfDriver = pcfDriver;
	}

	public Double getPcfLower() {
		return pcfLower;
	}

	public void setPcfLower(final Double pcfLower) {
		this.pcfLower = pcfLower;
	}

	public Double getPcfUpper() {
		return pcfUpper;
	}

	public void setPcfUpper(final Double pcfUpper) {
		this.pcfUpper = pcfUpper;
	}

	public Double getPcfValue() {
		return pcfValue;
	}

	public void setPcfValue(final Double pcfValue) {
		this.pcfValue = pcfValue;
	}

	public Double getPcfSecondOrder() {
		return pcfSecondOrder;
	}

	public void setPcfSecondOrder(final Double pcfSecondOrder) {
		this.pcfSecondOrder = pcfSecondOrder;
	}

	public Double getPcfThirdOrder() {
		return pcfThirdOrder;
	}

	public void setPcfThirdOrder(final Double pcfThirdOrder) {
		this.pcfThirdOrder = pcfThirdOrder;
	}

	public Double getPcftpm() {
		return pcftpm;
	}

	public void setPcftpm(final Double pcftpm) {
		this.pcftpm = pcftpm;
	}

	public Double getPebitdaDriver() {
		return pebitdaDriver;
	}

	public void setPebitdaDriver(final Double pebitdaDriver) {
		this.pebitdaDriver = pebitdaDriver;
	}

	public Double getPebitdaLower() {
		return pebitdaLower;
	}

	public void setPebitdaLower(final Double pebitdaLower) {
		this.pebitdaLower = pebitdaLower;
	}

	public Double getPebitdaUpper() {
		return pebitdaUpper;
	}

	public void setPebitdaUpper(final Double pebitdaUpper) {
		this.pebitdaUpper = pebitdaUpper;
	}

	public Double getPebitdaValue() {
		return pebitdaValue;
	}

	public void setPebitdaValue(final Double pebitdaValue) {
		this.pebitdaValue = pebitdaValue;
	}

	public Double getPebitdaSecondOrder() {
		return pebitdaSecondOrder;
	}

	public void setPebitdaSecondOrder(final Double pebitdaSecondOrder) {
		this.pebitdaSecondOrder = pebitdaSecondOrder;
	}

	public Double getPebitdaThirdOrder() {
		return pebitdaThirdOrder;
	}

	public void setPebitdaThirdOrder(final Double pebitdaThirdOrder) {
		this.pebitdaThirdOrder = pebitdaThirdOrder;
	}

	public Double getPebitdatpm() {
		return pebitdatpm;
	}

	public void setPebitdatpm(final Double pebitdatpm) {
		this.pebitdatpm = pebitdatpm;
	}

	public Double getPeDriver() {
		return peDriver;
	}

	public void setPeDriver(final Double peDriver) {
		this.peDriver = peDriver;
	}

	public Double getPeLower() {
		return peLower;
	}

	public void setPeLower(final Double peLower) {
		this.peLower = peLower;
	}

	public Double getPeUpper() {
		return peUpper;
	}

	public void setPeUpper(final Double peUpper) {
		this.peUpper = peUpper;
	}

	public Double getPeValue() {
		return peValue;
	}

	public void setPeValue(final Double peValue) {
		this.peValue = peValue;
	}

	public Double getPeSecondOrder() {
		return peSecondOrder;
	}

	public void setPeSecondOrder(final Double peSecondOrder) {
		this.peSecondOrder = peSecondOrder;
	}

	public Double getPeThirdOrder() {
		return peThirdOrder;
	}

	public void setPeThirdOrder(final Double peThirdOrder) {
		this.peThirdOrder = peThirdOrder;
	}

	public Double getPetpm() {
		return petpm;
	}

	public void setPetpm(final Double petpm) {
		this.petpm = petpm;
	}

	public Double getPsDriver() {
		return psDriver;
	}

	public void setPsDriver(final Double psDriver) {
		this.psDriver = psDriver;
	}

	public Double getPsLower() {
		return psLower;
	}

	public void setPsLower(final Double psLower) {
		this.psLower = psLower;
	}

	public Double getPsUpper() {
		return psUpper;
	}

	public void setPsUpper(final Double psUpper) {
		this.psUpper = psUpper;
	}

	public Double getPsValue() {
		return psValue;
	}

	public void setPsValue(final Double psValue) {
		this.psValue = psValue;
	}

	public Double getPsSecondOrder() {
		return psSecondOrder;
	}

	public void setPsSecondOrder(final Double psSecondOrder) {
		this.psSecondOrder = psSecondOrder;
	}

	public Double getPsThirdOrder() {
		return psThirdOrder;
	}

	public void setPsThirdOrder(final Double psThirdOrder) {
		this.psThirdOrder = psThirdOrder;
	}

	public Double getPstpm() {
		return pstpm;
	}

	public void setPstpm(final Double pstpm) {
		this.pstpm = pstpm;
	}

	public Double getTriggerLevel() {
		return triggerLevel;
	}

	public void setTriggerLevel(final Double triggerLevel) {
		this.triggerLevel = triggerLevel;
	}

	public Double getValuationIndicator() {
		return valuationIndicator;
	}

	public void setValuationIndicator(final Double valuationIndicator) {
		this.valuationIndicator = valuationIndicator;
	}

	public Double getValuationIndicator10D() {
		return valuationIndicator10D;
	}

	public void setValuationIndicator10D(final Double valuationIndicator10D) {
		this.valuationIndicator10D = valuationIndicator10D;
	}

	public Double getEstimatesFy1() {
		return estimatesFy1;
	}

	public void setEstimatesFy1(final Double estimatesFy1) {
		this.estimatesFy1 = estimatesFy1;
	}

	public Double getEstimatesFy2() {
		return estimatesFy2;
	}

	public void setEstimatesFy2(final Double estimatesFy2) {
		this.estimatesFy2 = estimatesFy2;
	}

	public Double getDmScoreBookvalue() {
		return dmScoreBookvalue;
	}

	public void setDmScoreBookvalue(final Double dmScoreBookvalue) {
		this.dmScoreBookvalue = dmScoreBookvalue;
	}

	public Double getDmScoreEarnings() {
		return dmScoreEarnings;
	}

	public void setDmScoreEarnings(final Double dmScoreEarnings) {
		this.dmScoreEarnings = dmScoreEarnings;
	}

	public Double getDmScoreCashflow() {
		return dmScoreCashflow;
	}

	public void setDmScoreCashflow(final Double dmScoreCashflow) {
		this.dmScoreCashflow = dmScoreCashflow;
	}

	public Double getDmScoreSales() {
		return dmScoreSales;
	}

	public void setDmScoreSales(final Double dmScoreSales) {
		this.dmScoreSales = dmScoreSales;
	}

	public Double getDmScoreEbitda() {
		return dmScoreEbitda;
	}

	public void setDmScoreEbitda(final Double dmScoreEbitda) {
		this.dmScoreEbitda = dmScoreEbitda;
	}

	public Double getIntrinsicValueSlope() {
		return intrinsicValueSlope;
	}

	public void setIntrinsicValueSlope(final Double intrinsicValueSlope) {
		this.intrinsicValueSlope = intrinsicValueSlope;
	}

	public Boolean getIntrinsicValueSlopeSignal() {
		return intrinsicValueSlopeSignal;
	}

	public void setIntrinsicValueSlopeSignal(final Boolean intrinsicValueSlopeSignal) {
		this.intrinsicValueSlopeSignal = intrinsicValueSlopeSignal;
	}

	public Double getFairValueSlope() {
		return fairValueSlope;
	}

	public void setFairValueSlope(final Double fairValueSlope) {
		this.fairValueSlope = fairValueSlope;
	}

	public Boolean getFairValueRangeFlag() {
		return fairValueRangeFlag;
	}

	public void setFairValueRangeFlag(final Boolean fairValueRangeFlag) {
		this.fairValueRangeFlag = fairValueRangeFlag;
	}

	public Double getIntrinsicValueRsq() {
		return intrinsicValueRsq;
	}

	public void setIntrinsicValueRsq(final Double intrinsicValueRsq) {
		this.intrinsicValueRsq = intrinsicValueRsq;
	}

	public Boolean getCviFvFlag() {
		return cviFvFlag;
	}

	public void setCviFvFlag(final Boolean cviFvFlag) {
		this.cviFvFlag = cviFvFlag;
	}

	public Boolean getCviIvFlag() {
		return cviIvFlag;
	}

	public void setCviIvFlag(final Boolean cviIvFlag) {
		this.cviIvFlag = cviIvFlag;
	}

	public Boolean getCviBuySignal() {
		return cviBuySignal;
	}

	public void setCviBuySignal(final Boolean cviBuySignal) {
		this.cviBuySignal = cviBuySignal;
	}

	public Boolean getCviCloseSignal() {
		return cviCloseSignal;
	}

	public void setCviCloseSignal(final Boolean cviCloseSignal) {
		this.cviCloseSignal = cviCloseSignal;
	}

	public Boolean getCviShortSignal() {
		return cviShortSignal;
	}

	public void setCviShortSignal(final Boolean cviShortSignal) {
		this.cviShortSignal = cviShortSignal;
	}

	public Boolean getCviCoverSignal() {
		return cviCoverSignal;
	}

	public void setCviCoverSignal(final Boolean cviCoverSignal) {
		this.cviCoverSignal = cviCoverSignal;
	}

	public Integer getCviBuyCount() {
		return cviBuyCount;
	}

	public void setCviBuyCount(final Integer cviBuyCount) {
		this.cviBuyCount = cviBuyCount;
	}

	public Integer getCviCloseCount() {
		return cviCloseCount;
	}

	public void setCviCloseCount(final Integer cviCloseCount) {
		this.cviCloseCount = cviCloseCount;
	}

	public Integer getCviShortCount() {
		return cviShortCount;
	}

	public void setCviShortCount(final Integer cviShortCount) {
		this.cviShortCount = cviShortCount;
	}

	public Integer getCviCoverCount() {
		return cviCoverCount;
	}

	public void setCviCoverCount(final Integer cviCoverCount) {
		this.cviCoverCount = cviCoverCount;
	}

	public Boolean getFractionalBuy() {
		return fractionalBuy;
	}

	public void setFractionalBuy(final Boolean fractionalBuy) {
		this.fractionalBuy = fractionalBuy;
	}

	public Boolean getFractionalSell() {
		return fractionalSell;
	}

	public void setFractionalSell(final Boolean fractionalSell) {
		this.fractionalSell = fractionalSell;
	}

	public Double getCviRangeUpside() {
		return cviRangeUpside;
	}

	public void setCviRangeUpside(final Double cviRangeUpside) {
		this.cviRangeUpside = cviRangeUpside;
	}

	public Double getCviRangeDownside() {
		return cviRangeDownside;
	}

	public void setCviRangeDownside(final Double cviRangeDownside) {
		this.cviRangeDownside = cviRangeDownside;
	}

	public Double getCvi() {
		return cvi;
	}

	public void setCvi(final Double cvi) {
		this.cvi = cvi;
	}

	public Double getApolloAlpha() {
		return apolloAlpha;
	}

	public void setApolloAlpha(final Double apolloAlpha) {
		this.apolloAlpha = apolloAlpha;
	}

	public Double getStockIndexBeta() {
		return stockIndexBeta;
	}

	public void setStockIndexBeta(final Double stockIndexBeta) {
		this.stockIndexBeta = stockIndexBeta;
	}

	public Double getRangeExp20dPlus() {
		return rangeExp20dPlus;
	}

	public void setRangeExp20dPlus(final Double rangeExp20dPlus) {
		this.rangeExp20dPlus = rangeExp20dPlus;
	}

	public Double getRangeExp20dMinus() {
		return rangeExp20dMinus;
	}

	public void setRangeExp20dMinus(final Double rangeExp20dMinus) {
		this.rangeExp20dMinus = rangeExp20dMinus;
	}

	public Double getLast20dPerformance() {
		return last20dPerformance;
	}

	public void setLast20dPerformance(final Double last20dPerformance) {
		this.last20dPerformance = last20dPerformance;
	}

	public Double getFairValueProjection() {
		return fairValueProjection;
	}

	public void setFairValueProjection(final Double fairValueProjection) {
		this.fairValueProjection = fairValueProjection;
	}

	public Double getIntrinsicValueProjection() {
		return intrinsicValueProjection;
	}

	public void setIntrinsicValueProjection(final Double intrinsicValueProjection) {
		this.intrinsicValueProjection = intrinsicValueProjection;
	}

	public Double getNewTarget() {
		return newTarget;
	}

	public void setNewTarget(final Double newTarget) {
		this.newTarget = newTarget;
	}

	public Double getNewTargetReturn() {
		return newTargetReturn;
	}

	public void setNewTargetReturn(final Double newTargetReturn) {
		this.newTargetReturn = newTargetReturn;
	}

	public Double getConditionalDirectionForecast() {
		return conditionalDirectionForecast;
	}

	public void setConditionalDirectionForecast(final Double conditionalDirectionForecast) {
		this.conditionalDirectionForecast = conditionalDirectionForecast;
	}

	public Double getMoveToFairValueProjection() {
		return moveToFairValueProjection;
	}

	public void setMoveToFairValueProjection(final Double moveToFairValueProjection) {
		this.moveToFairValueProjection = moveToFairValueProjection;
	}

	public Double getMoveToIntrinsicValueProjection() {
		return moveToIntrinsicValueProjection;
	}

	public void setMoveToIntrinsicValueProjection(final Double moveToIntrinsicValueProjection) {
		this.moveToIntrinsicValueProjection = moveToIntrinsicValueProjection;
	}

	@Column(name = "fair_value_range_limits")
	public Boolean getFairValueRangeLimits() {
		return fairValueRangeLimits;
	}

	public void setFairValueRangeLimits(final Boolean fairValueRangeLimits) {
		this.fairValueRangeLimits = fairValueRangeLimits;
	}

	public Double getGreenIvProjection() {
		return greenIvProjection;
	}

	public void setGreenIvProjection(final Double greenIvProjection) {
		this.greenIvProjection = greenIvProjection;
	}

	public Double getGreenCvi() {
		return greenCvi;
	}

	public void setGreenCvi(final Double greenCvi) {
		this.greenCvi = greenCvi;
	}

	public Double getGreenFvProjection() {
		return greenFvProjection;
	}

	public void setGreenFvProjection(final Double greenFvProjection) {
		this.greenFvProjection = greenFvProjection;
	}

	public Double getGreenForecastReturn() {
		return greenForecastReturn;
	}

	public void setGreenForecastReturn(final Double greenForecastReturn) {
		this.greenForecastReturn = greenForecastReturn;
	}

	public Double getGreenAlphaBeta() {
		return greenAlphaBeta;
	}

	public void setGreenAlphaBeta(final Double greenAlphaBeta) {
		this.greenAlphaBeta = greenAlphaBeta;
	}

	public Double getGreenIvSlope() {
		return greenIvSlope;
	}

	public void setGreenIvSlope(final Double greenIvSlope) {
		this.greenIvSlope = greenIvSlope;
	}

	public Double getGreenMomentum() {
		return greenMomentum;
	}

	public void setGreenMomentum(final Double greenMomentum) {
		this.greenMomentum = greenMomentum;
	}

	public Double getGreenExtremeFilter() {
		return greenExtremeFilter;
	}

	public void setGreenExtremeFilter(final Double greenExtremeFilter) {
		this.greenExtremeFilter = greenExtremeFilter;
	}

	public Double getGreenRangeLimit() {
		return greenRangeLimit;
	}

	public void setGreenRangeLimit(final Double greenRangeLimit) {
		this.greenRangeLimit = greenRangeLimit;
	}

	public Double getGreenIvPctScore() {
		return greenIvPctScore;
	}

	public void setGreenIvPctScore(final Double greenIvPctScore) {
		this.greenIvPctScore = greenIvPctScore;
	}

	public Double getGreenVolatilityScore() {
		return greenVolatilityScore;
	}

	public void setGreenVolatilityScore(final Double greenVolatilityScore) {
		this.greenVolatilityScore = greenVolatilityScore;
	}

	public Double getRedIvProjection() {
		return redIvProjection;
	}

	public void setRedIvProjection(final Double redIvProjection) {
		this.redIvProjection = redIvProjection;
	}

	public Double getRedCvi() {
		return redCvi;
	}

	public void setRedCvi(final Double redCvi) {
		this.redCvi = redCvi;
	}

	public Double getRedFvProjection() {
		return redFvProjection;
	}

	public void setRedFvProjection(final Double redFvProjection) {
		this.redFvProjection = redFvProjection;
	}

	public Double getRedForecastReturn() {
		return redForecastReturn;
	}

	public void setRedForecastReturn(final Double redForecastReturn) {
		this.redForecastReturn = redForecastReturn;
	}

	public Double getRedAlphaBeta() {
		return redAlphaBeta;
	}

	public void setRedAlphaBeta(final Double redAlphaBeta) {
		this.redAlphaBeta = redAlphaBeta;
	}

	public Double getRedIvSlope() {
		return redIvSlope;
	}

	public void setRedIvSlope(final Double redIvSlope) {
		this.redIvSlope = redIvSlope;
	}

	public Double getRedMomentum() {
		return redMomentum;
	}

	public void setRedMomentum(final Double redMomentum) {
		this.redMomentum = redMomentum;
	}

	public Double getRedExtremeFilter() {
		return redExtremeFilter;
	}

	public void setRedExtremeFilter(final Double redExtremeFilter) {
		this.redExtremeFilter = redExtremeFilter;
	}

	public Double getRedRangeLimit() {
		return redRangeLimit;
	}

	public void setRedRangeLimit(final Double redRangeLimit) {
		this.redRangeLimit = redRangeLimit;
	}

	public Double getRedIvPctScore() {
		return redIvPctScore;
	}

	public void setRedIvPctScore(final Double redIvPctScore) {
		this.redIvPctScore = redIvPctScore;
	}

	public Double getRedVolatilityScore() {
		return redVolatilityScore;
	}

	public void setRedVolatilityScore(final Double redVolatilityScore) {
		this.redVolatilityScore = redVolatilityScore;
	}
	
	public Double getPriceChange1m() {
		return priceChange1m;
	}

	public void setPriceChange1m(Double priceChange1m) {
		this.priceChange1m = priceChange1m;
	}

	public Double getDiscountPremiumToFairValue() {
		return discountPremiumToFairValue;
	}

	public void setDiscountPremiumToFairValue(Double discountPremiumToFairValue) {
		this.discountPremiumToFairValue = discountPremiumToFairValue;
	}

	public Double getNetDiscountMedianFairValue() {
		return netDiscountMedianFairValue;
	}

	public void setNetDiscountMedianFairValue(Double netDiscountMedianFairValue) {
		this.netDiscountMedianFairValue = netDiscountMedianFairValue;
	}

	public Double getFairValueChange1m() {
		return fairValueChange1m;
	}

	public void setFairValueChange1m(Double fairValueChange1m) {
		this.fairValueChange1m = fairValueChange1m;
	}

	public Double getExpectedReturn2m() {
		return expectedReturn2m;
	}

	public void setExpectedReturn2m(Double expectedReturn2m) {
		this.expectedReturn2m = expectedReturn2m;
	}

	public Double getDiscountPremiumToIntrinsicValue() {
		return discountPremiumToIntrinsicValue;
	}

	public void setDiscountPremiumToIntrinsicValue(Double discountPremiumToIntrinsicValue) {
		this.discountPremiumToIntrinsicValue = discountPremiumToIntrinsicValue;
	}

	public Double getIntrinsicValueChange3m() {
		return intrinsicValueChange3m;
	}

	public void setIntrinsicValueChange3m(Double intrinsicValueChange3m) {
		this.intrinsicValueChange3m = intrinsicValueChange3m;
	}

	public Double getFairValueChange3m() {
		return fairValueChange3m;
	}

	public void setFairValueChange3m(Double fairValueChange3m) {
		this.fairValueChange3m = fairValueChange3m;
	}

	public Double getIntrinsicValueChange1m() {
		return intrinsicValueChange1m;
	}

	public void setIntrinsicValueChange1m(Double intrinsicValueChange1m) {
		this.intrinsicValueChange1m = intrinsicValueChange1m;
	}

	public Double getPctInFairValueRange() {
		return pctInFairValueRange;
	}

	public void setPctInFairValueRange(Double pctInFairValueRange) {
		this.pctInFairValueRange = pctInFairValueRange;
	}

	public Long getStockId() {
		return stockId;
	}

	public void setStockId(Long stockId) {
		this.stockId = stockId;
	}

	public Date getStampDate() {
		return stampDate;
	}

	public void setStampDate(Date stampDate) {
		this.stampDate = stampDate;
	}

	@Transient
	// Calculated fields for Daily Connector
	public String calcRiskComment() {
		if (getRisk().doubleValue() < 0) {
			return "Risk averse";
		} else {
			return "Risk assuming";
		}
	}

	@Transient
	public String calcSentimentComment() {
		if (getSentiment().doubleValue() < 0) {
			return "Negative";
		} else {
			return "Positive";
		}
	}

	@Transient
	// IF([Skew]>0.5,"Positive",IF([Skew]<-0.5, "Negative","Neutral"))
	public String calcSkewComment() {
		if (getSkew().doubleValue() > 0.5) {
			return "Positive";
		} else if (getSkew().doubleValue() < -0.5) {
			return "Negative";
		} else {
			return "Neutral";
		}
	}

	@Override
	public boolean equals(final Object obj) {
		if (obj == null)
			return false;
		if (this == obj)
			return true;
		if (obj instanceof StockIndicator) {
			final StockIndicator that = (StockIndicator) obj;
			if (null == this.fairValue && null == that.getFairValue() && null == this.cmci && null == that.getCmci()
					&& null == this.getStampDate() && null == that.getStampDate())
				return true;
			if ((null == this.fairValue && null != that.getFairValue()) || null == this.cmci && null != that.getCmci())
				return false;
			if ((null != this.fairValue && null == that.getFairValue()) || null != this.cmci && null == that.getCmci())
				return false;

			if (this.getStampDate().equals(that.getStampDate()) && this.fairValue.equals(that.getFairValue())
					&& this.cmci.equals(that.getCmci()))
				return true;
		}
		return false;
	}

	@Override
	public int hashCode() {
		int hashCode = 31;
		hashCode = (hashCode * 11) + (this.fairValue == null ? 0 : this.fairValue.hashCode());
		hashCode = (hashCode * 11) + (this.cmci == null ? 0 : this.cmci.hashCode());
		hashCode = (hashCode * 11) + (this.getStampDate() == null ? 0 : this.getStampDate().hashCode());
		return hashCode;
	}

	@Override
	public String toString() {
		return "StockIndicators [libraStock=" + stockId + ", target20D=" + target20D + ", target2M=" + target2M
				+ ", fairValue=" + fairValue + ", discountToFairValue=" + discountToFairValue
				+ ", medianDiscountToFairValue=" + medianDiscountToFairValue + ", fairValueUpper=" + fairValueUpper
				+ ", fairValueMiddle=" + fairValueMiddle + ", fairValueLower=" + fairValueLower + ", revisions="
				+ revisions + ", revisions1M=" + revisions1M + ", revisions3M=" + revisions3M + ", risk=" + risk
				+ ", skew=" + skew + ", starRating=" + starRating + ", flowDriver=" + flowDriver + ", priceDriver="
				+ priceDriver + ", flow=" + flow + ", flowMomentum=" + flowMomentum + ", sentiment=" + sentiment
				+ ", volumeAvg3M=" + volumeAvg3M + ", highPrice52W=" + highPrice52W + ", lowPrice52W=" + lowPrice52W
				+ ", macd1=" + macd1 + ", macd2=" + macd2 + ", macdSignal=" + macdSignal + ", dmiPositive="
				+ dmiPositive + ", dmiNegative=" + dmiNegative + ", cmci=" + cmci + ", williams=" + williams
				+ ", rsi14D=" + rsi14D + ", stochasticsPercentK=" + stochasticsPercentK + ", stochasticsPercentD="
				+ stochasticsPercentD + ", efficiencyRatio=" + efficiencyRatio + ", efficiencyRatioSMA10D="
				+ efficiencyRatioSMA10D + ", oscillator=" + oscillator + ", sma20D=" + sma20D + ", sma50D=" + sma50D
				+ ", sma200D=" + sma200D + ", bollingerUpper=" + bollingerUpper + ", bollingerMiddle=" + bollingerMiddle
				+ ", bollingerLower=" + bollingerLower + ", pctChangeYTD=" + pctChangeYTD + ", macdScore=" + macdScore
				+ ", dmiScore=" + dmiScore + ", cmciScore=" + cmciScore + ", williamsScore=" + williamsScore
				+ ", rsiScore=" + rsiScore + ", stochasticsScore=" + stochasticsScore + ", efficiencyScore="
				+ efficiencyScore + ", oscillatorScore=" + oscillatorScore + ", fireline=" + fireline
				+ ", moneyManager=" + moneyManager + ", adx=" + adx + ", adr=" + adr + ", dayIndex=" + dayIndex
				+ ", dynamicWeighting=" + dynamicWeighting + ", dynamicLongShort=" + dynamicLongShort + ", volumeScore="
				+ volumeScore + ", flowScore=" + flowScore + ", flowMomentumScore=" + flowMomentumScore
				+ ", valueIndicatorScore=" + valueIndicatorScore + ", dfvScore=" + dfvScore + ", flowDriverScore="
				+ flowDriverScore + ", peMaximum=" + peMaximum + ", peMinimum=" + peMinimum + ", pcFMaximum="
				+ pcFMaximum + ", pcFMinimum=" + pcFMinimum + ", pbMaximum=" + pbMaximum + ", pbMinimum=" + pbMinimum
				+ ", psMaximum=" + psMaximum + ", psMinimum=" + psMinimum + ", pebitdaMaximum=" + pebitdaMaximum
				+ ", pebitdaMinimum=" + pebitdaMinimum + ", roeMaximum=" + roeMaximum + ", roeMinimum=" + roeMinimum
				+ ", epsFY1PctChange1D=" + epsFY1PctChange1D + ", epsFY1PctChange5D=" + epsFY1PctChange5D
				+ ", epsFY1PctChange1M=" + epsFY1PctChange1M + ", epsFY1PctChange3M=" + epsFY1PctChange3M
				+ ", lowerMarginOfSafetyLevel=" + lowerMarginOfSafetyLevel + ", upperMarginOfSafetyLevel="
				+ upperMarginOfSafetyLevel + ", dynamicShortWeighting=" + dynamicShortWeighting + ", fib023=" + fib023
				+ ", fib038=" + fib038 + ", fib050=" + fib050 + ", fib061=" + fib061 + ", fib076=" + fib076
				+ ", dailyAlpha8W=" + dailyAlpha8W + ", dailyAlpha3W=" + dailyAlpha3W + ", dailyAlpha1W=" + dailyAlpha1W
				+ ", dailyAlpha1D=" + dailyAlpha1D + ", intrinsicValue=" + intrinsicValue + ", intrinsicValuePct="
				+ intrinsicValuePct + ", intrinsicValueVolatility=" + intrinsicValueVolatility + ", sweetSpot="
				+ sweetSpot + ", valuationTradingFlags=" + valuationTradingFlags + ", target20DReturn="
				+ target20DReturn + ", ptpsTrend=" + ptpsTrend + ", ptpsSAR=" + ptpsSAR + ", ptpsAF=" + ptpsAF
				+ ", baseValue=" + baseValue + ", stretchValue=" + stretchValue + ", mergerValue=" + mergerValue
				+ ", triggerLevel=" + triggerLevel + ", valuationIndicator=" + valuationIndicator
				+ ", valuationIndicator10D=" + valuationIndicator10D + ", longTermPessimistic=" + longTermPessimistic
				+ ", longTermNeutral=" + longTermNeutral + ", longTermOptimistic=" + longTermOptimistic
				+ ", estimatesFy1=" + estimatesFy1 + ", estimatesFy2=" + estimatesFy2 + ", epsTrend=" + epsTrend
				+ ", longTermPBForecast=" + longTermPBForecast + ", longTermPCFForecast=" + longTermPCFForecast
				+ ", longTermPEBITDAForecast=" + longTermPEBITDAForecast + ", longTermPEForecast=" + longTermPEForecast
				+ ", longTermPSForecast=" + longTermPSForecast + ", longTermValue=" + longTermValue + ", pbDriver="
				+ pbDriver + ", pbLower=" + pbLower + ", pbUpper=" + pbUpper + ", pbValue=" + pbValue
				+ ", pbSecondOrder=" + pbSecondOrder + ", pbThirdOrder=" + pbThirdOrder + ", pbtpm=" + pbtpm
				+ ", pcfDriver=" + pcfDriver + ", pcfLower=" + pcfLower + ", pcfUpper=" + pcfUpper + ", pcfValue="
				+ pcfValue + ", pcfSecondOrder=" + pcfSecondOrder + ", pcfThirdOrder=" + pcfThirdOrder + ", pcftpm="
				+ pcftpm + ", pebitdaDriver=" + pebitdaDriver + ", pebitdaLower=" + pebitdaLower + ", pebitdaUpper="
				+ pebitdaUpper + ", pebitdaValue=" + pebitdaValue + ", pebitdaSecondOrder=" + pebitdaSecondOrder
				+ ", pebitdaThirdOrder=" + pebitdaThirdOrder + ", pebitdatpm=" + pebitdatpm + ", peDriver=" + peDriver
				+ ", peLower=" + peLower + ", peUpper=" + peUpper + ", peValue=" + peValue + ", peSecondOrder="
				+ peSecondOrder + ", peThirdOrder=" + peThirdOrder + ", petpm=" + petpm + ", psDriver=" + psDriver
				+ ", psLower=" + psLower + ", psUpper=" + psUpper + ", psValue=" + psValue + ", psSecondOrder="
				+ psSecondOrder + ", psThirdOrder=" + psThirdOrder + ", pstpm=" + pstpm + ", dmScoreBookvalue="
				+ dmScoreBookvalue + ", dmScoreEarnings=" + dmScoreEarnings + ", dmScoreCashflow=" + dmScoreCashflow
				+ ", dmScoreSales=" + dmScoreSales + ", dmScoreEbitda=" + dmScoreEbitda  
				+ ", priceChange1m=" + priceChange1m 
				+ ", discountPremiumToFairValue=" + discountPremiumToFairValue 
				+ ", netDiscountMedianFairValue=" + netDiscountMedianFairValue 
				+ ", fairValueChange1m=" + fairValueChange1m 
				+ ", expectedReturn2m=" + expectedReturn2m 
				+ ", discountPremiumToIntrinsicValue=" + discountPremiumToIntrinsicValue 
				+ ", intrinsicValueChange3m=" + intrinsicValueChange3m 
				+ ", fairValueChange3m=" + fairValueChange3m 
				+ ", intrinsicValueChange1m=" + intrinsicValueChange1m 
				+ ", pctInFairValueRange=" + pctInFairValueRange 
				+ "]";
	}

	/**
	 * In DESC order
	 */
	@Override
	public int compareTo(StockIndicator o) {
		return o.getStampDate().compareTo(this.stampDate);
	}

}
