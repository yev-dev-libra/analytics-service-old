package com.libra.apollo.analytics.entity;

import java.util.SortedSet;
import java.util.TreeSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.SortNatural;

import lombok.Data;
import lombok.EqualsAndHashCode;

@Entity
@Table(name = "apollo_analytics", schema="analytics")
@SuppressWarnings("serial")
@Data 
@EqualsAndHashCode(callSuper=true)
public class ApolloAnalytics extends AutoGeneratedId {
	
	@Enumerated(EnumType.STRING)
	@Column(name="analytics_type", nullable=false)
	private AnalyticsType type;
	
	@NotNull
	@Column(name="name")
	private String name;
	
	@Column(name="description")
	private String desc;
	
	@NotNull
	@Enumerated(EnumType.STRING)
	private RunType runType;
	
	@OneToMany(mappedBy="analytics", cascade=CascadeType.ALL, fetch=FetchType.LAZY )
	@SortNatural
	private SortedSet<AnalyticsTemplate> template = new TreeSet<>();
	
}
